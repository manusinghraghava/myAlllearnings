import de.hybris.platform.core.Registry;
import de.hybris.platform.servicelayer.model.ModelService;
import de.hybris.platform.servicelayer.search.FlexibleSearchQuery;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Arrays;
import org.apache.commons.collections4.CollectionUtils;
import de.hybris.platform.servicelayer.search.SearchResult;
import de.hybris.platform.servicelayer.model.ModelService;

import de.hybris.platform.core.model.order.OrderModel;
import com.amway.eventstream.model.AmwayEventStagingEntryModel;
import com.amway.eventstream.enums.AmwayEventSyncState;
import com.amway.indfacades.order.payload.*;
import java.util.List;
import java.util.Optional;

import de.hybris.platform.cms2.model.site.CMSSiteModel;
import de.hybris.platform.servicelayer.search.FlexibleSearchService;
import org.apache.commons.collections4.CollectionUtils;
import de.hybris.platform.servicelayer.i18n.CommonI18NService;
import de.hybris.platform.store.BaseStoreModel;
import de.hybris.platform.store.services.BaseStoreService;
import de.hybris.platform.site.BaseSiteService;
import org.apache.commons.lang.StringEscapeUtils;
import com.amway.eventstream.enums.*;
import java.text.SimpleDateFormat;  
import java.util.*;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;


void addColumn(FileWriter fileWriter,String entry)
	{
		try
		{
			if(StringUtils.isNotBlank(entry) && entry.contains(",")){
				entry = entry.replace(",", StringUtils.EMPTY);
			}
			fileWriter.append(entry);
			fileWriter.append(",");
		}
		catch(Exception e)
{
e.printStackTrace();
}


	}
try{

Date currentDate = new Date();
println currentDate;
Calendar cal = Calendar.getInstance();
cal.setTime(currentDate);
//change this for fetching order on different time

Date sysDate = new Date();
cal.add(Calendar.HOUR, -2);
Date previouDay = cal.getTime();
cal.setTime(sysDate);
Date aheadTime = cal.getTime();
SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
String strDate= formatter.format(previouDay);
String aheadDate= formatter.format(aheadTime);

formatter = new SimpleDateFormat("dd_MM_yyyy_HH_mm");

String reportDate= formatter.format(previouDay);

String eventQuery="select {e.pk} from {AmwayEventStagingEntry as e} where {e.timeStamp}>='"+strDate+"' and {e.timeStamp}<='"+aheadDate+"'";

println eventQuery;



final SearchResult<AmwayEventStagingEntryModel> eventSearchResult = ((FlexibleSearchService) Registry.getApplicationContext().getBean("flexibleSearchService")).search(eventQuery);

final List<AmwayEventStagingEntryModel> eventResults = eventSearchResult.getResult();

String fileName ="/opt/hybris/data/amway/reports/events/entryLog_"+reportDate+".csv";

FileWriter fileWriter = new FileWriter(fileName);

			fileWriter.append("eventname, event key, event seq, creation time,event Pk,order Total PV,order Code");

			fileWriter.append("\n");
if(CollectionUtils.isNotEmpty(eventResults))
{

for(AmwayEventStagingEntryModel entry: eventResults)
{

 
  if(!(entry.getEventName()==(EventName.ABO_DOCUMENT_UPLOADED)||entry.getEventName()==(EventName.RETURN_PLACED)||entry.getEventName()==(EventName.RETURN_COMPLETED)))
		 {
		 try{
		 String orderNo=entry.getKey().substring(0,9);
		 
		 	String query = "Select {o.pk} from {order as o} where {o.code} in ('"+orderNo+"')";
		final SearchResult<OrderModel> searchResult = ((FlexibleSearchService) Registry.getApplicationContext().getBean("flexibleSearchService")).search(query);
		
		final OrderModel order = searchResult.getResult().stream().findFirst().get();
		if(order!=null){
addColumn(fileWriter,entry.getEventName().getCode());
				addColumn(fileWriter,entry.getKey());
				addColumn(fileWriter,entry.getSeq());
				addColumn(fileWriter,entry.getTimeStamp().toString());
				addColumn(fileWriter,entry.getPk().getLongValue().toString());
				addColumn(fileWriter,order.getLynxGrandTotalPv().toString());
				addColumn(fileWriter,orderNo);
				fileWriter.append("\n");
				}
				}
				catch(Exception e)
				{
				fileWriter.append("\n");
				continue;
				}
				}
}
fileWriter.flush();
}
}
catch(Exception e)
{
e.printStackTrace();
}
finally {
			try {
				if(fileWriter != null) {
	   				fileWriter.close();
				}
			} 
catch(Exception e)
{
e.printStackTrace();
}
}